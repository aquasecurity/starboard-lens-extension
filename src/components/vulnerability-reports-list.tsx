import {Component, LensRendererExtension} from "@k8slens/extensions";
import React from "react";
import {vulnerabilityReportsStore} from "../vulnerability-reports-store";
import {VulnerabilityReport} from "../vulnerability-report"

enum sortBy {
    name = "name",
    namespace = "namespace",
    critical = "critical",
    high = "high",
    medium = "medium",
    low = "low",
    unknown = "unknown",
}

export class VulnerabilityReportPage extends React.Component<{ extension: LensRendererExtension }> {

    async componentDidMount() {
        await vulnerabilityReportsStore.loadAll()
    }

    render() {
        return (
            <Component.KubeObjectListLayout
                className="VulnerabilityReports" store={vulnerabilityReportsStore}
                sortingCallbacks={{
                    [sortBy.name]: (report: VulnerabilityReport) => report.getName(),
                    [sortBy.namespace]: (report: VulnerabilityReport) => report.metadata.namespace,
                    [sortBy.critical]: (report: VulnerabilityReport) => report.report.summary.criticalCount,
                    [sortBy.high]: (report: VulnerabilityReport) => report.report.summary.highCount,
                    [sortBy.medium]: (report: VulnerabilityReport) => report.report.summary.mediumCount,
                    [sortBy.low]: (report: VulnerabilityReport) => report.report.summary.lowCount,
                    [sortBy.unknown]: (report: VulnerabilityReport) => report.report.summary.unknownCount,
                }}
                searchFilters={[
                    (report: VulnerabilityReport) => report.getSearchFields()
                ]}
                renderHeaderTitle="VulnerabilityReports"
                renderTableHeader={[
                    {title: "Name", className: "name", sortBy: sortBy.name},
                    {title: "Namespace", className: "namespace", sortBy: sortBy.namespace},
                    {title: "Scanner", className: "scanner"},
                    {title: "Image", className: "repository"},
                    {title: "Critical", className: "critical", sortBy: sortBy.critical},
                    {title: "High", className: "high", sortBy: sortBy.high},
                    {title: "Medium", className: "medium", sortBy: sortBy.medium},
                    {title: "Low", className: "low", sortBy: sortBy.low},
                    {title: "Unknown", sortBy: sortBy.unknown},
                ]}
                renderTableContents={(report: VulnerabilityReport) => [
                    report.getName(),
                    report.metadata.namespace,
                    report.report.scanner.name + " " + report.report.scanner.version,
                    report.report.artifact.repository + ":" + report.report.artifact.tag,
                    report.report.summary.criticalCount,
                    report.report.summary.highCount,
                    report.report.summary.mediumCount,
                    report.report.summary.lowCount,
                    report.report.summary.unknownCount,
                ]}
            />
        )
    }
}
