import {Component} from "@k8slens/extensions";
import React from "react";
import {VulnerabilityReport} from "../vulnerability-report";

export interface VulnerabilityReportDetailsProps extends Component.KubeObjectDetailsProps<VulnerabilityReport> {
}

export class VulnerabilityReportDetails extends React.Component<VulnerabilityReportDetailsProps> {

    render() {
        const {object: report} = this.props;
        if (!report) return null;
        return (
            <div className="VulnerabilityReport">
                <Component.DrawerItem name="Created">
                    {report.getAge(true, false)} ago ({report.metadata.creationTimestamp})
                </Component.DrawerItem>
                {/*<Component.DrawerItem name="DNS Names">*/}
                {/*  {certificate.spec.dnsNames.join(",")}*/}
                {/*</Component.DrawerItem>*/}
                {/*<Component.DrawerItem name="Secret">*/}
                {/*  {certificate.spec.secretName}*/}
                {/*</Component.DrawerItem>*/}
                {/*<Component.DrawerItem name="Status" className="status" labelsOnly>*/}
                {/*  {certificate.status.conditions.map((condition, index) => {*/}
                {/*    const { type, reason, message, status } = condition;*/}
                {/*    const kind = type || reason;*/}
                {/*    if (!kind) return null;*/}
                {/*    return (*/}
                {/*      <Component.Badge*/}
                {/*        key={kind + index} label={kind}*/}
                {/*        className={"success "+kind.toLowerCase()}*/}
                {/*        tooltip={message}*/}
                {/*      />*/}
                {/*    );*/}
                {/*  })}*/}
                {/*</Component.DrawerItem>*/}
            </div>
        )
    }
}
