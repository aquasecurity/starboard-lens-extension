import {Component} from "@k8slens/extensions";
import React from "react";
import {VulnerabilityReport} from "../vulnerability-report";

export interface VulnerabilityReportDetailsProps extends Component.KubeObjectDetailsProps<VulnerabilityReport> {
}

export class VulnerabilityReportDetails extends React.Component<VulnerabilityReportDetailsProps> {

    render() {
        const {object: report} = this.props;
        if (!report) return null;
        return (
            <div className="VulnerabilityReport">
                <Component.KubeObjectMeta object={report} hideFields={["uid", "resourceVersion", "selfLink"]}/>
                <Component.DrawerItem name="Critical">
                    {report.report.summary.criticalCount}
                </Component.DrawerItem>
                <Component.DrawerItem name="High">
                    {report.report.summary.highCount}
                </Component.DrawerItem>
                <Component.DrawerItem name="Medium">
                    {report.report.summary.mediumCount}
                </Component.DrawerItem>
                <Component.DrawerItem name="Low">
                    {report.report.summary.lowCount}
                </Component.DrawerItem>
                <Component.DrawerItem name="Unknown">
                    {report.report.summary.unknownCount}
                </Component.DrawerItem>
                <Component.DrawerItem name="Vulnerabilities" className="status" labelsOnly>
                    {report.report.vulnerabilities.map((vulnerability, index) => {
                        return (
                            <Component.Badge
                                key={index} label={vulnerability.vulnerabilityID} tooltip={vulnerability.resource}
                            />
                        );
                    })}
                </Component.DrawerItem>
            </div>
        )
    }
}
